# mesos-master
---
- name: Add mesosphere repository
  command: "rpm -Uvh http://repos.mesosphere.io/el/6/noarch/RPMS/mesosphere-el-repo-6-2.noarch.rpm"
  args:
    creates: /etc/yum.repos.d/mesosphere.repo
  when: not 'production' in group_names

- name: Install the CDH key
  rpm_key:
    key: http://archive.cloudera.com/cdh4/redhat/6/x86_64/cdh/RPM-GPG-KEY-cloudera
    state: present
  when: not 'production' in group_names

- name: Add the CDH repository
  command: "rpm -Uvh http://archive.cloudera.com/cdh4/one-click-install/redhat/6/x86_64/cloudera-cdh-4-0.x86_64.rpm"
  args:
    creates: /etc/yum.repos.d/cloudera-cdh4.repo
  when: not 'production' in group_names

# Note: Even though the installed packages are the same version
# for some reason they must be removed and reinstalled as
# dependencies
- name: Remove incompatible packages
  yum:
    name: "{{ item }}"
    state: absent
  with_items:
    - redhat-lsb-graphics
    - redhat-lsb-core

- name: Install mesos and supporting packages
  yum:
    name: "{{ item }}"
    state: present
  with_items:
    - libselinux-python
    - mesos
    - marathon
    - zookeeper-server

- name: Configure mesos with the IP's of all zookeepers
  template:
    src: zk.j2
    dest: /etc/mesos/zk
  notify:
    - restart mesos-master

- name: Create zookeeper config file
  template:
    dest: /etc/zookeeper/conf/zoo.cfg
    src: zoo.cfg
    owner: zookeeper
    group: zookeeper

- name: Initialize zookeeper
  command: "zookeeper-server-initialize --myid {{ zookeeper_id }}"
  args:
    creates: /var/lib/zookeeper/myid

- name: Ensure ownership is correct
  file:
    dest: /var/lib/zookeeper
    state: directory
    recurse: yes
    owner: zookeeper
    group: zookeeper

- name: Update the quorum config file
  template:
    dest: /etc/mesos-master/quorum
    src: quorum.j2
  notify:
    - restart mesos-master

- name: Add the ip address to the mesos-master folder
  shell: "echo {{ ansible_ssh_host }} | sudo tee /etc/mesos-master/ip"
  args:
    creates: /etc/mesos-master/ip
  notify:
    - restart mesos-master

- name: Add the ip to the hostname file too
  shell: "sudo cp /etc/mesos-master/ip /etc/mesos-master/hostname"
  args:
    creates: /etc/mesos-master/hostname
  notify:
    - restart mesos-master

- name: Create Marathon config folders
  file:
    path: /etc/marathon/conf
    state: directory

- name: Copy hostname file to Marathon config
  shell: "cp /etc/mesos-master/hostname /etc/marathon/conf"
  args:
    creates: /etc/marathon/conf
  notify:
    - restart marathon

- name: Copy the zk file to Marathon
  shell: "sudo cp /etc/mesos/zk /etc/marathon/conf/master"
  args:
    creates: /etc/marathon/conf/master
  notify:
    - restart marathon

- name: Setup Zookeeper config for Marathon
  template:
    dest: /etc/marathon/conf/zk
    src: zk.marathon.j2
  notify:
    - restart marathon

- name: Start zookeeper
  service:
    name: zookeeper-server
    state: started
    enabled: yes

# Ansible "service" command doesn't work with upstart jobs on Centos, so
# do it manually
- name: Stop the Mesos client process
  command: "stop mesos-slave"
  register: mesos_client_stop
  failed_when: mesos_client_stop.rc != 0 and 'Unknown instance' not in mesos_client_stop.stderr

- name: Override the mesos-slave service
  file:
    dest: /etc/init/mesos-slave.conf.override
    state: touch

- name: Start the Mesos master and Marathon processes (they are already enabled)
  command: "start {{ item }}"
  with_items:
    - mesos-master
    - marathon
  register: mesos_master_start
  failed_when: mesos_master_start.rc != 0 and 'Job is already running' not in mesos_master_start.stderr

# TODO: More restrictive iptables rules are needed, specifically ports
# 5050 and 8080 should only be open to the proxy server, with 5050 also
# open to the Mesos client nodes.  Ports 2181, 2888, and 3888 should be open
# to the Mesos cluster only.
- name: Open required ports
  command: "iptables -I {{ iptables_chain }} 2 -m state --state NEW -p tcp --dport {{ item }} -j ACCEPT"
  with_items:
    - 2181
    - 5050
    - 8080
    - 2888
    - 3888
  when: iptables_config

- name: Save iptables
  command: "/sbin/service iptables save"
  when: iptables_config
  notify:
    - restart iptables
